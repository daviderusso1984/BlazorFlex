#pragma checksum "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorFlex/BlazorFlex/BFlexbox.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "89b41c651e2a96ba93771fdeeff2565742589d20"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorFlex
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#line 1 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorFlex/BlazorFlex/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
    public partial class BFlexbox : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#line 11 "/Users/daviderusso1984/Desktop/progetti_nuget/BlazorFlex/BlazorFlex/BFlexbox.razor"
      
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public Directions Direction { get; set; }=Directions.row;

    [Parameter]
    public Vertical_aligns Vertical_align { get; set; }=Vertical_aligns.start;

    [Parameter]
    public Horizontal_alings Horizontal_aling { get; set; }= Horizontal_alings.start;

    [Parameter]
    public Boolean Wrap {get;set;}=false;


    private string uscita { get; set; } = "";

    protected override void OnInitialized () {
        uscita = "base ";
        tipo ();
        vertical();
        horizontal();
        if(Wrap){
            uscita += "flex-container-wrap ";
        }
    }

    private void tipo () {
        switch (Direction) {
            case Directions.column:
                uscita += "flex-direction-column ";
                break;
            case Directions.column_reverse:
                uscita += "flex-direction-column-reverse ";
                break;
            case Directions.row:
                uscita += "flex-direction-row ";
                break;
            case Directions.row_reverse:
                uscita += "flex-direction-row-reverse ";
                break;           
            default:
                break;
        }
    }

    private void horizontal(){
         switch (Horizontal_aling) {
            case Horizontal_alings.center:
                uscita += "flex-justify-center ";
                break;
            case Horizontal_alings.end:
                uscita += "flex-justify-end ";
                break;
            case Horizontal_alings.space_around:
                uscita += "flex-justify-space-around ";
                break;
            case Horizontal_alings.space_between:
                uscita += "flex-justify-space-between ";
                break;
            case Horizontal_alings.start:
                uscita += "flex-justify-start ";
                break;
            default:
                break;
        }
    }

    private void vertical(){
         switch (Vertical_align) {
            case Vertical_aligns.baseline:
                uscita += "flex-aling-baseline ";
                break;
            case Vertical_aligns.center:
                uscita += "flex-aling-center ";
                break;
            case Vertical_aligns.end:
                uscita += "flex-aling-end ";
                break;
            case Vertical_aligns.start:
                uscita += "flex-aling-start ";
                break;
            case Vertical_aligns.stretch:
                uscita += "flex-aling-stretch ";
                break;
            default:

                break;
        }
    }

   
    
    

#line default
#line hidden
    }
}
#pragma warning restore 1591
